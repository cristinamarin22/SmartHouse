//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartHouse.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Settings
    {
        public int Id { get; set; }
        [Display(Name = "Alert critical temperature")]
        public bool CriticalTemperatureAlertYN { get; set; }

        [Display(Name = "Critical temperature (Celsius degrees)")]
        public float CriticalTemperatureAlertValue { get; set; }

        [Display(Name = "Alert critical humidity")]
        public bool CriticalHumidityAlertYN { get; set; }

        [Display(Name = "Critical humidity (%)")]
        public float CriticalHumidityAlertValue { get; set; }

        [Display(Name = "Alert motion detection")]
        public bool MotionDetectionAlertYN { get; set; }

        [Display(Name = "Alert sound detection")]
        public bool SoundDetectionAlertYN { get; set; }

        [Display(Name = "Last updated")]
        public System.DateTime InternalTime { get; set; }

        [Display(Name = "Delete temperature & humidity historical data older than ")]
        public int DeleteTemperatureHumidityHistoricalDataOlderThan { get; set; }
        public int DeleteTemperatureHumidityHistoricalDataOlderThanUnitMeasure { get; set; }

        [Display(Name = "Delete motion detection historical data older than ")]
        public int DeleteMotionDetectionHistoricalDataOlderThan { get; set; }
        public int DeleteMotionDetectionHistoricalDataOlderThanUnitMeasure { get; set; }

        [Display(Name = "Delete sound detection historical data older than ")]
        public int DeleteSoundDetectionHistoricalDataOlderThan { get; set; }
        public int DeleteSoundDetectionHistoricalDataOlderThanUnitMeasure { get; set; }

        [Display(Name = "Email address for alerts")]
        public string AlertsToEmail { get; set; }

        [Display(Name = "Motion detection email alert interval")]
        public int SendMotionDetectionEmailAlertInterval { get; set; }
        public int SendMotionDetectionEmailAlertIntervalUnitMeasure { get; set; }

        [Display(Name = "Critical temperature interval")]
        public float CriticalTemperatureAlertMinValue { get; set; }
        public float CriticalTemperatureAlertMaxValue { get; set; }

        [Display(Name = "Critical humidity interval")]
        public float CriticalHumidityAlertMinValue { get; set; }
        public float CriticalHumidityAlertMaxValue { get; set; }

        [Display(Name = "Temperature email alert interval")]
        public int SendTemperatureEmailAlertInterval { get; set; }
        public int SendTemperatureEmailAlertIntervalUnitMeasure { get; set; }

        [Display(Name = "Humidity email alert interval")]
        public int SendHumidityEmailAlertInterval { get; set; }
        public int SendHumidityEmailAlertIntervalUnitMeasure { get; set; }

        [Display(Name = "Sound detection email alert interval")]
        public int SendSoundDetectionEmailAlertInterval { get; set; }
        public int SendSoundDetectionEmailAlertIntervalUnitMeasure { get; set; }

        [Display(Name = "Temperature & Humidity sensor readings ON/OFF")]
        public bool TemperatureHumidityOn { get; set; }

        [Display(Name = "Motion detection sensor ON/OFF")]
        public bool MotionDetectionOn { get; set; }

        [Display(Name = "Sound detection sensor ON/OFF")]
        public bool SoundDetectionOn { get; set; }

        [Display(Name = "Gas detection sensor ON/OFF")]
        public bool GasDetectionOn { get; set; }

        [Display(Name = "Delete gas detection historical data older than ")]
        public int DeleteGasDetectionHistoricalDataOlderThan { get; set; }
        public int DeleteGasDetectionHistoricalDataOlderThanUnitMeasure { get; set; }

        [Display(Name = "Gas detection email alert interval")]
        public int SendGasDetectionEmailAlertInterval { get; set; }
        public int SendGasDetectionEmailAlertIntervalUnitMeasure { get; set; }

        [Display(Name = "Alert gas detection")]
        public bool GasDetectionAlertYN { get; set; }
    }
}

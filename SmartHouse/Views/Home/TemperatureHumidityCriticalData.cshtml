@model IEnumerable<SmartHouse.Models.TemperatureHumidityCriticalData>

@{
    ViewBag.Title = "TemperatureHumidityCriticalData";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
html, body, h1, h2, h3, h4, h5 {
    font-family: "Raleway", sans-serif;
}

table {
    border-collapse: collapse;
    width: 100%;
}

th, td {
    text-align: left;
    padding: 8px;
}

tr:nth-child(even) {
    background-color: #f2f2f2
}

th {
    background-color: #ed4334;
    color: white;
}

.button {
    background-color: #4CAF50; /* Green */
    border: none;
    color: white;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    -webkit-transition-duration: 0.4s; /* Safari */
    transition-duration: 0.4s;
    cursor: pointer;
}

.button3 {
    background-color: white;
    color: black;
    border: 2px solid #f44336;
}

.button3:hover {
    background-color: #f44336;
    color: white;
}

/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    -webkit-animation-name: fadeIn; /* Fade in the background */
    -webkit-animation-duration: 0.4s;
    animation-name: fadeIn;
    animation-duration: 0.4s
}

/* Modal Content */
.modal-content {
    position: fixed;
    bottom: 0;
    background-color: #fefefe;
    width: 100%;
    -webkit-animation-name: slideIn;
    -webkit-animation-duration: 0.4s;
    animation-name: slideIn;
    animation-duration: 0.4s
}

.modal-header {
    padding: 2px 16px;
    background-color: #f44336;
    color: white;
}

.modal-footer {
    padding: 2px 16px;
    background-color: white;
    color: white;
}

/* Add Animation */
@@-webkit-keyframes slideIn {
    from {
        bottom: -300px;
        opacity: 0
    }

    to {
        bottom: 0;
        opacity: 1
    }
}

@@keyframes slideIn {
    from {
        bottom: -300px;
        opacity: 0
    }

    to {
        bottom: 0;
        opacity: 1
    }
}

@@-webkit-keyframes fadeIn {
    from {
        opacity: 0
    }

    to {
        opacity: 1
    }
}

@@keyframes fadeIn {
    from {
        opacity: 0
    }

    to {
        opacity: 1
    }
}

.modal-body {
    padding: 2px 20px;
    font-size: 16px;
}
</style>
<body>
    <div class="w3-container">
        <button type="button" class="button button3" id="refreshButton" onclick="getAllRows()">Refresh</button>

        <button type="button" class="button button3" id="deleteAllRecordsButton" onclick="deleteAllRecords()">Delete all</button>

        <button type="button" class="button button3" id="deleteFilteredData" onclick="deleteFilteredData()">Delete filtered records</button>

        <td>
            <span style="margin-left: 10%;">
                @Html.TextBox("TemperatureTextBoxMinValue", "", new { id = "TemperatureMinValueTextBox", style = "width:70px; background:#ff9191" })
            </span>
        </td>

        <td>
            <label><span> <= Temperature <= </span></label>
        </td>

        <td>
            @Html.TextBox("TemperatureTextBoxMaxValue", "", new { id = "TemperatureMaxValueTextBox", style = "width:70px; background:#ff9191" })
        </td>

        <td>
            <span style="margin-left: 2.5%;">
                @Html.TextBox("HumidityTextBoxMinValue", "", new { id = "HumidityMinValueTextBox", style = "width:70px; background:#ff9191" })
            </span>
        </td>

        <td>
            <label><span> <= Humidity <= </span></label>
        </td>

        <td>
            @Html.TextBox("HumidityTextBoxMaxValue", "", new { id = "HumidityMaxValueTextBox", style = "width:70px; background:#ff9191" })
        </td>

        <td>
            <span style="margin-left: 2.5%;">
                @Html.TextBox("DateTextBoxMinValue", "", new { id = "DateMinValueTextBox", style = "width:150px; background:#ff9191", @type = "date" })
            </span>
        </td>

        <td>
            <label><span> <= Date <= </span></label>
        </td>

        <td>
            @Html.TextBox("DateTextBoxMaxValue", "", new { id = "DateMaxValueTextBox", style = "width:150px; background:#ff9191", @type = "date" })
        </td>

        <td>
            <button style="float: right;" type="button" class="button button3" id="filterButton" onclick="filterData()">Filter</button>
        </td>


        <table class="table" id="tableTemperatureHumidity">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.InternalTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MinCriticalTemperature)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Temperature)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MaxCriticalTemperature)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MinCriticalHumidity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Humidity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MaxCriticalHumidity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmailAlertSent)
                </th>
                <th>
                    Action
                </th>
            </tr>

            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.InternalTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinCriticalTemperature)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Temperature)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxCriticalTemperature)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinCriticalHumidity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Humidity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxCriticalHumidity)
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => item.EmailAlertSent, new { @checked = "checked", @readonly = "readonly" })
                </td>
                <td>
                    @Html.ActionLink("Delete", "DeleteTemperatureHumidityCriticalData", "Home", new { id = item.Id }, null)
                </td>
            </tr>
            }

        </table><br>
    </div>

    <!-- Popup for Delete All-->
    <div id="deleteAllPopup" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">&times;</span>
                <h2>Delete</h2>
            </div>
            <div class="modal-body">
                <p>Do you want to delete all records? <button type="button" style="float: right;" class="button button3" id="deleteAllRecordsNoButton">No</button><button type="button" style="float: right;" class="button button3" id="deleteAllRecordsYesButton">Yes</button></p>
            </div>
        </div>

    </div>


    <!-- Popup for Delete Filtered Data-->
    <div id="deleteFilteredDataPopup" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">&times;</span>
                <h2>Delete</h2>
            </div>
            <div class="modal-body">
                <p>Do you want to delete all filtered records? <button type="button" style="float: right;" class="button button3" id="deleteFilteredRecordsNoButton">No</button><button type="button" style="float: right;" class="button button3" id="deleteFilteredRecordsYesButton">Yes</button></p>
            </div>
        </div>

    </div>


    <script src="http://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type="text/javascript" charset="utf8" src="/js/jquery.dataTables.js"></script>

    <script type="text/javascript">

    var dataIsFiltered = false;

    var span = document.getElementsByClassName("close")[0];
    var modal = document.getElementById('deleteAllPopup');
    var modalFiltered = document.getElementById('deleteFilteredDataPopup');

    function getAllRows() {
            $.ajax({
                url: '@Url.Action("GetTemperatureHumidityCriticalHistoryData", "Home")',
                method: 'GET',
                dataType: 'json',
                success: function (data) {
                    var html = '';
                    for (var i = 0; i < data.length; i++) {
                        html += '<tr><td>' + new Date(data[i].InternalTime.match(/\d+/).map(Number)[0]).toLocaleString();

                        if (data[i].MinCriticalTemperature == null)
                            html += '</td><td> - ';
                        else
                            html += '</td><td>' + data[i].MinCriticalTemperature;

                        html += '</td><td>' + data[i].Temperature;

                        if (data[i].MaxCriticalTemperature == null)
                            html += '</td><td> - ';
                        else
                            html += '</td><td>' + data[i].MaxCriticalTemperature;

                        if (data[i].MinCriticalHumidity == null)
                            html += '</td><td> - ';
                        else
                            html += '</td><td>' + data[i].MinCriticalHumidity;

                        html += '</td><td>' + data[i].Humidity;

                        if (data[i].MaxCriticalHumidity == null)
                            html += '</td><td> - ';
                        else
                            html += '</td><td>' + data[i].MaxCriticalHumidity;

                        html += '</td><td>' + '<input id="item_EmailAlertSent" name="item.EmailAlertSent" type="checkbox" value="' + data[i].SentEmailAlert + '" /> <input name="item.EmailAlertSent" type="hidden" value="' + data[i].EmailAlertSent + '" />' +
                            '</td><td>' + '<a href="/Home/DeleteTemperatureHumidityCriticalData/' + data[i].Id + '">Delete</a>'   + '</td></tr>';
                    }

                    $('#tableTemperatureHumidity tr>td').remove();
                    $("#tableTemperatureHumidity").find('tbody').append($(html));

                    intervalReadings = setTimeout("getAllRows()", 10000);

                    $('#refreshButton').text('Refresh');

                    if (dataIsFiltered) {
                        $('#TemperatureMinValueTextBox').val("");
                        $('#TemperatureMaxValueTextBox').val("");
                        $('#HumidityMinValueTextBox').val("");
                        $('#HumidityMaxValueTextBox').val("");
                        $('#DateMinValueTextBox').val("");
                        $('#DateMaxValueTextBox').val("");

                        dataIsFiltered = false;
                        $('#deleteFilteredData').css("visibility", "hidden");
                    }
                }
           });
    }


        $(window).bind("load", function () {
            intervalReadings = setTimeout("getAllRows()", 10000);
            $('#deleteFilteredData').css("visibility", "hidden");
        });


        function filterData() {

            var filter = {

                "TemperatureMinValue": $('#TemperatureMinValueTextBox').val(),
                "TemperatureMaxValue": $('#TemperatureMaxValueTextBox').val(),
                "HumidityMinValue": $('#HumidityMinValueTextBox').val(),
                "HumidityMaxValue": $('#HumidityMaxValueTextBox').val(),
                "DateMinValue": $('#DateMinValueTextBox').val(),
                "DateMaxValue": $('#DateMaxValueTextBox').val()
            };

            $.ajax({
                url: '@Url.Action("FilterTemperatureHumidityCriticalData", "Home")',
                method: 'GET',
                data: filter,
                dataType: "json",
                success: function (response) {
                    $('#tableTemperatureHumidity tr>td').remove();
                    var html = '';
                    for (var i = 0; i < response.length; i++) {
                        html += '<tr><td>' + new Date(response[i].InternalTime.match(/\d+/).map(Number)[0]).toLocaleString();

                        if (data[i].MinCriticalTemperature == null)
                            html += '</td><td> - ';
                        else
                            html += '</td><td>' + response[i].MinCriticalTemperature;

                        html += '</td><td>' + response[i].Temperature;

                        if (response[i].MaxCriticalTemperature == null)
                            html += '</td><td> - ';
                        else
                            html += '</td><td>' + response[i].MaxCriticalTemperature;

                        if (response[i].MinCriticalHumidity == null)
                            html += '</td><td> - ';
                        else
                            html += '</td><td>' + response[i].MinCriticalHumidity;

                        html += '</td><td>' + response[i].Humidity;

                        if (response[i].MaxCriticalHumidity == null)
                            html += '</td><td> - ';
                        else
                            html += '</td><td>' + response[i].MaxCriticalHumidity;

                        html += '</td><td>' + '<input id="item_EmailAlertSent" name="item.EmailAlertSent" type="checkbox" value="' + response[i].SentEmailAlert + '" /> <input name="item.EmailAlertSent" type="hidden" value="' + response[i].EmailAlertSent + '" />' +
                            '</td><td>' + '<a href="/Home/DeleteTemperatureHumidityCriticalData/' + response[i].Id + '">Delete</a>' + '</td></tr>';
                    }

                    $("#tableTemperatureHumidity").find('tbody').append($(html));

                    intervalReadings = clearTimeout(intervalReadings);

                    $('#refreshButton').text('Get all');

                    dataIsFiltered = true;
                    $('#deleteFilteredData').css("visibility", "visible");
                }
            });
        }

        function deleteAllRecords() {

            modal.style.display = "block";

            confirmDeleteRows(function (confirmed) {
                if (confirmed) {
                    // Whatever you need to do if they clicked confirm
                    $.ajax({
                        url: '@Url.Action("DeleteAllRecordsTemperatureHumidityCriticalData", "Home")',
                        method: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            var html = '';
                            for (var i = 0; i < data.length; i++) {
                                html += '<tr><td>' + new Date(data[i].InternalTime.match(/\d+/).map(Number)[0]).toLocaleString();

                                if (data[i].MinCriticalTemperature == null)
                                    html += '</td><td> - ';
                                else
                                    html += '</td><td>' + data[i].MinCriticalTemperature;

                                html += '</td><td>' + data[i].Temperature;

                                if (data[i].MaxCriticalTemperature == null)
                                    html += '</td><td> - ';
                                else
                                    html += '</td><td>' + data[i].MaxCriticalTemperature;

                                if (data[i].MinCriticalHumidity == null)
                                    html += '</td><td> - ';
                                else
                                    html += '</td><td>' + data[i].MinCriticalHumidity;

                                html += '</td><td>' + data[i].Humidity;

                                if (data[i].MaxCriticalHumidity == null)
                                    html += '</td><td> - ';
                                else
                                    html += '</td><td>' + data[i].MaxCriticalHumidity;

                                html += '</td><td>' + '<input id="item_EmailAlertSent" name="item.EmailAlertSent" type="checkbox" value="' + data[i].SentEmailAlert + '" /> <input name="item.EmailAlertSent" type="hidden" value="' + data[i].EmailAlertSent + '" />' +
                                    '</td><td>' + '<a href="/Home/DeleteTemperatureHumidityCriticalData/' + data[i].Id + '">Delete</a>' + '</td></tr>';
                            }

                            $('#tableTemperatureHumidity tr>td').remove();
                            $("#tableTemperatureHumidity").find('tbody').append($(html));

                            intervalReadings = setTimeout("getAllRows()", 10000);

                            $('#deleteFilteredData').css("visibility", "hidden");
                        }
                    });
                }

                modal.style.display = "none";
            });
        }

        function deleteFilteredData() {

            modalFiltered.style.display = "block";

            confirmDeleteFilteredRows(function (confirmed) {
                if (confirmed) {

                    var filter = {

                        "TemperatureMinValue": $('#TemperatureMinValueTextBox').val(),
                        "TemperatureMaxValue": $('#TemperatureMaxValueTextBox').val(),
                        "HumidityMinValue": $('#HumidityMinValueTextBox').val(),
                        "HumidityMaxValue": $('#HumidityMaxValueTextBox').val(),
                        "DateMinValue": $('#DateMinValueTextBox').val(),
                        "DateMaxValue": $('#DateMaxValueTextBox').val()
                    };

                    // Whatever you need to do if they clicked confirm
                    $.ajax({
                        url: '@Url.Action("DeleteFilteredTemperatureHumidityCriticalData", "Home")',
                        method: 'GET',
                        data: filter,
                        dataType: 'json',
                        success: function (response) {
                            var html = '';
                            for (var i = 0; i < response.length; i++) {
                                html += '<tr><td>' + new Date(response[i].InternalTime.match(/\d+/).map(Number)[0]).toLocaleString();

                                if (data[i].MinCriticalTemperature == null)
                                    html += '</td><td> - ';
                                else
                                    html += '</td><td>' + response[i].MinCriticalTemperature;

                                html += '</td><td>' + response[i].Temperature;

                                if (response[i].MaxCriticalTemperature == null)
                                    html += '</td><td> - ';
                                else
                                    html += '</td><td>' + response[i].MaxCriticalTemperature;

                                if (response[i].MinCriticalHumidity == null)
                                    html += '</td><td> - ';
                                else
                                    html += '</td><td>' + response[i].MinCriticalHumidity;

                                html += '</td><td>' + response[i].Humidity;

                                if (response[i].MaxCriticalHumidity == null)
                                    html += '</td><td> - ';
                                else
                                    html += '</td><td>' + response[i].MaxCriticalHumidity;

                                html += '</td><td>' + '<input id="item_EmailAlertSent" name="item.EmailAlertSent" type="checkbox" value="' + response[i].SentEmailAlert + '" /> <input name="item.EmailAlertSent" type="hidden" value="' + response[i].EmailAlertSent + '" />' +
                                    '</td><td>' + '<a href="/Home/DeleteTemperatureHumidityCriticalData/' + response[i].Id + '">Delete</a>' + '</td></tr>';
                            }

                            $('#tableTemperatureHumidity tr>td').remove();
                            $("#tableTemperatureHumidity").find('tbody').append($(html));

                            intervalReadings = clearTimeout(intervalReadings);
                        }
                    });
                }

                modalFiltered.style.display = "none";
            });
        }

        function confirmDeleteRows(callback) {

            $('#deleteAllRecordsYesButton').click(function () { callback(true) });
            $('#deleteAllRecordsNoButton').click(function () { callback(false) });
        }


        function confirmDeleteFilteredRows(callback) {

            $('#deleteFilteredRecordsYesButton').click(function () { callback(true) });
            $('#deleteFilteredRecordsNoButton').click(function () { callback(false) });
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
            modalFiltered.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }

            if (event.target == modalFiltered) {
                modalFiltered.style.display = "none";
            }
        }

    </script>
</body>
</html>
